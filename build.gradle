plugins {
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'build/generated-sources/jaxb'
		}
	}
}

configurations {
	jaxb
	jaxws
}

task genKadasterWs {
	ext.sourcesDir = "${rootDir}/src/main/java"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schema = "${rootDir}/src/main/resources/suwinet/Diensten/KadasterDossierGSD/v0300-b02/Impl/BKWI.wsdl"

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef (name:'wsimport',
					classname:'com.sun.tools.ws.ant.WsImport',
					classpath:configurations.jaxws.asPath)
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			wsimport(keep:true,
					destdir: classesDir,
					sourcedestdir: sourcesDir,
					wsdl: schema)
		}
	}
}

task genRDWWs {
	ext.sourcesDir = "${rootDir}/src/main/java"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schema = "${rootDir}/src/main/resources/suwinet/Diensten/RDWDossierGSD/v0200-b02/Impl/BKWI.wsdl"

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef (name:'wsimport',
					classname:'com.sun.tools.ws.ant.WsImport',
					classpath:configurations.jaxws.asPath)
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			wsimport(keep:true,
					destdir: classesDir,
					sourcedestdir: sourcesDir,
					wsdl: schema)
		}
	}
}

task genUWVWs {
	ext.sourcesDir = "${rootDir}/src/main/java"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schema = "${rootDir}/src/main/resources/suwinet/Diensten/UWVDossierInkomstenGSDDigitaleDiensten/v0200-b01/Impl/BKWI.wsdl"

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef (name:'wsimport',
					classname:'com.sun.tools.ws.ant.WsImport',
					classpath:configurations.jaxws.asPath)
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			wsimport(keep:true,
					destdir: classesDir,
					sourcedestdir: sourcesDir,
					wsdl: schema)
		}
	}
}

//compileJava.dependsOn genKadasterWs

bootJar {
	archiveBaseName = 'gs-producing-web-service'
	archiveVersion =  '0.1.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'wsdl4j:wsdl4j'
	jaxb("org.glassfish.jaxb:jaxb-xjc")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	jaxws("com.sun.xml.ws:jaxws-tools:4.0.1")
}

test {
	useJUnitPlatform()
}
